#include <string>
#include <iostream>
using namespace std;

class Circle
{
protected:
	string zentr;
	int R;

public:
	Circle()
	{
		R=0;
		zentr="O";
		cout<<"Zentr: "<<zentr<<endl<<"R="<<R<<endl;
	}
	
	Circle(const Circle&)
	{}
	
	void setData()
	{
	cout << "Enter name of circle and radius" << endl;
	cin >> zentr >> R;
	}
	
	void getData()
	{
	cout << "Name of Circle: " << zentr << endl << "Radius: " << R << endl;
	}
	
	virtual void plosha()
	{
		int S;
		S=Pi*R^2;
		cout<<"Площа"<<S<<cout;
	}
	
	virtual void dovjina()
	{
		int S;
		S=2*Pi*R;
		cout<<"Площа"<<S<<cout;
	}
	
	virtual void massage()
	{
		cout<<"My class";
	}
	
	void massage2()
	{
		cout<<"Not my class";
	}
	
	string operator+(string a, string b)
	{
		a.insert(a.length(),b);
		return a;
	}
};

class Kvadrat : public Circle
{
protected:
	int stor;
public:
	NewCircle() : Circle() //цей конструктор потрібний, щоб конструктори материнського класу працювали в дочірньому
	{}
	
	NewCircle() : Circle(const Circle&)

	NewCircle(int input)
	{
		stor = input;
	}

	void show_value()
	{
		cout << stor << endl;
	}

	virtual void plosha()
	{
		int S;
		S=stor^stor;
		cout<<"Площа"<<S<<cout;
	}
	
	virtual void massage()
	{
		cout<<"Only My class";
	}
	
	void massage2() //при виклику методу виведе "Not my class"
	{
		cout<<"My class forever alone";
	}
	
};

int main()
{
	Circle O; //створення об’єкта
	O.setData(); //виклик функції setData() об’єкта O
	O.getData();
	int size;
	cout<<"Введіть довжину масива"<<endl;
	cin>>size;
	NewCircle *Ono = new NewCircle[size]; //масив об'єктів
	Circle *obj = Ono;
	
	for(int i=0; i<size; i++)
	{
		obj[i].setData();
	}
	
	for(int i=0; i<size; i++)
	{
		obj[i].getData();
	}
	return 0;
}
